From d0d9aeb47d4ab106f8131e0941433317b138808b Mon Sep 17 00:00:00 2001
From: Roman Pustobaiev <roman@persimmons.ai>
Date: Tue, 10 Oct 2023 13:04:27 +0200
Subject: [PATCH] Patch

---
 arch/riscv/Kconfig                      |   4 +
 arch/riscv/dts/Makefile                 |   1 +
 arch/riscv/dts/occamy-u-boot.dtsi       |   1 +
 arch/riscv/dts/occamy.dts               | 165 ++++++++++++++++++++++++
 board/pulp-platform/occamy/Kconfig      |  31 +++++
 board/pulp-platform/occamy/Makefile     |   5 +
 board/pulp-platform/occamy/occamy.c     |   5 +
 board/pulp-platform/occamy/occamy_spl.c |  72 +++++++++++
 common/init/board_init.c                |   2 +
 common/log.c                            |  19 +++
 configs/pulp-platform_occamy_defconfig  |  75 +++++++++++
 drivers/core/root.c                     |   2 +
 include/configs/pulp-platform_occamy.h  |  39 ++++++
 include/log.h                           |   7 +
 lib/tiny-printf.c                       |  12 +-
 15 files changed, 438 insertions(+), 2 deletions(-)
 create mode 100644 arch/riscv/dts/occamy-u-boot.dtsi
 create mode 100644 arch/riscv/dts/occamy.dts
 create mode 100644 board/pulp-platform/occamy/Kconfig
 create mode 100644 board/pulp-platform/occamy/Makefile
 create mode 100644 board/pulp-platform/occamy/occamy.c
 create mode 100644 board/pulp-platform/occamy/occamy_spl.c
 create mode 100644 configs/pulp-platform_occamy_defconfig
 create mode 100644 include/configs/pulp-platform_occamy.h

diff --git a/arch/riscv/Kconfig b/arch/riscv/Kconfig
index b3d7fd84ce..d193ea497d 100644
--- a/arch/riscv/Kconfig
+++ b/arch/riscv/Kconfig
@@ -23,6 +23,9 @@ config TARGET_SIFIVE_UNLEASHED
 config TARGET_SIFIVE_UNMATCHED
 	bool "Support SiFive Unmatched Board"
 
+config TARGET_PULP_PLATFORM_OCCAMY
+	bool "Target Occamy Chiplet Architecture"
+
 config TARGET_SIPEED_MAIX
 	bool "Support Sipeed Maix Board"
 
@@ -61,6 +64,7 @@ source "board/microchip/mpfs_icicle/Kconfig"
 source "board/sifive/unleashed/Kconfig"
 source "board/sifive/unmatched/Kconfig"
 source "board/sipeed/maix/Kconfig"
+source "board/pulp-platform/occamy/Kconfig"
 
 # platform-specific options below
 source "arch/riscv/cpu/ax25/Kconfig"
diff --git a/arch/riscv/dts/Makefile b/arch/riscv/dts/Makefile
index 7778874831..04a0fccacf 100644
--- a/arch/riscv/dts/Makefile
+++ b/arch/riscv/dts/Makefile
@@ -6,6 +6,7 @@ dtb-$(CONFIG_TARGET_QEMU_VIRT) += qemu-virt.dtb
 dtb-$(CONFIG_TARGET_SIFIVE_UNLEASHED) += hifive-unleashed-a00.dtb
 dtb-$(CONFIG_TARGET_SIFIVE_UNMATCHED) += hifive-unmatched-a00.dtb
 dtb-$(CONFIG_TARGET_SIPEED_MAIX) += k210-maix-bit.dtb
+dtb-$(CONFIG_TARGET_PULP_PLATFORM_OCCAMY) += occamy.dtb
 
 targets += $(dtb-y)
 
diff --git a/arch/riscv/dts/occamy-u-boot.dtsi b/arch/riscv/dts/occamy-u-boot.dtsi
new file mode 100644
index 0000000000..aa7cdbfb18
--- /dev/null
+++ b/arch/riscv/dts/occamy-u-boot.dtsi
@@ -0,0 +1 @@
+#include "binman.dtsi"
diff --git a/arch/riscv/dts/occamy.dts b/arch/riscv/dts/occamy.dts
new file mode 100644
index 0000000000..15c5e28431
--- /dev/null
+++ b/arch/riscv/dts/occamy.dts
@@ -0,0 +1,165 @@
+// Copyright 2021 ETH Zurich and University of Bologna.
+// Licensed under the Apache License, Version 2.0, see LICENSE for details.
+// SPDX-License-Identifier: Apache-2.0
+
+
+// TODO(niwis) ato generate
+/dts-v1/;
+/ {
+  #address-cells = <2>;
+  #size-cells = <2>;
+  compatible = "eth,occamy-dev";
+  model = "eth,occamy";
+  config {
+    u-boot,spl-payload-offset = <0xa000000>;
+  };
+  chosen {
+    stdout-path = "/soc/serial@2002000:115200";
+  };
+  memory@80000000 {
+    device_type = "memory";
+    reg = <0x0 0x80000000 0x0 0x20000000>;
+  };
+  // Create a reserved memory region for Snitch program memory
+  reserved-memory {
+    #address-cells = <2>;
+    #size-cells = <2>;
+    ranges;
+    snitch_mem: buffer@c0000000 {
+        reg = <0x0 0xc0000000 0x0 0x10000000>;
+    };
+  };
+  cpus {
+    #address-cells = <1>;
+    #size-cells = <0>;
+    timebase-frequency = <12500000>;
+    CPU0: cpu@0 {
+      device_type = "cpu";
+      status = "okay";
+      compatible = "eth,ariane", "riscv";
+      clock-frequency = <25000000>;
+      riscv,isa = "rv64fimafd";
+      mmu-type = "riscv,sv39";
+      tlb-split;
+      reg = <0>;
+      // represents the destination of the mcause bits
+      // ariane has 3 interrupt inputs:
+      // - software (ipi_i[0], IRQ_M_SOFT)
+      // - timer (time_irq_i[0], IRQ_M_TIMER)
+      // - external (irq_i[1:0], {IRQ_S_EXT, IRQ_M_EXT})
+      CPU0_intc: interrupt-controller {
+        #interrupt-cells = <1>;
+        #address-cells = <1>;
+        interrupt-controller;
+        compatible = "riscv,cpu-intc";
+      };
+    };
+  };
+  sysclk: virt_25mhz {
+    #clock-cells = <0>;
+    compatible = "fixed-clock";
+    clock-frequency = <25000000>;
+  };
+  soc: soc {
+    #address-cells = <2>;
+    #size-cells = <2>;
+    compatible = "simple-bus";
+    ranges;
+    debug@0 {
+      compatible = "riscv,debug-013";
+      // interrupts-extended = <&CPU0_intc 65535>;
+      reg-names = "control";
+      reg = <0x0 0x0 0x0 0x1000>;
+    };
+    serial@2002000 {
+      compatible = "ns16550a";
+      reg = <0x0 0x2002000 0x0 0x1000>;
+      clock-frequency = <25000000>;
+      current-speed = <115200>;
+      interrupt-parent = <&PLIC0>;
+      interrupts = <36>;
+      reg-offset = <0>;
+      reg-shift = <2>; // regs are spaced on 32 bit boundary
+      reg-io-width = <4>; // only 32-bit access are supported
+      // fifo-size = <64>;
+    };
+    timer@2006000 {
+      compatible = "pulp,apb_timer";
+      interrupt-parent = <&PLIC0>;
+      interrupts = <0x00000068 0x00000069 0x00000070 0x00000071>;
+      reg = <0x00000000 0x2006000 0x00000000 0x00001000>;
+      reg-names = "control";
+    };
+    ramdisk@0 {
+      partition@6000000 {
+        label = "u-boot";
+        reg = <0xa0000000 0x100000>; // 1 MB
+        read-only;
+      };
+      uimage@6100000 {
+        label = "uimage";
+        reg = <0xa0100000 0x1000000>; // 16 MB
+        read-only;
+      };
+      partition@7100000 {
+        label = "filesystem";
+        reg = <0xa1100000 0x8f00000>; // 143 MB
+      };
+    };
+    clint0: clint@4000000 {
+      clock-frequency = <12500000>;
+      compatible = "riscv,clint0";
+      // clint generates software and timer interrupts to the core. Attach them
+      // to the CPU
+      // bits in mip and exception code in mcause:
+      // - IRQ_M_SOFT = 3: Machine software interrupt
+      // - IRQ_M_TIMER = 7: Machine timer interrupt
+      interrupts-extended = <&CPU0_intc 3 &CPU0_intc 7>;
+      reg-names = "clint";
+      reg = <0x0 0x4000000 0x0 0x100000>;
+    };
+    PLIC0: interrupt-controller@c000000 {
+      compatible = "riscv,plic0";
+      #address-cells = <0>;
+      #interrupt-cells = <1>;
+      interrupt-controller;
+      // PLIC generates external interrupts to the core, M and S mode
+      // - IRQ_M_EXT = 11: Machine external interrupt
+      // - IRQ_S_EXT = 9:  Supervisor external interrupt
+      interrupts-extended = <&CPU0_intc 11 &CPU0_intc 9>;
+      riscv,max-priority = <6>;
+      riscv,ndev = <72>;
+      reg = <0x0 0xc000000 0x0 0x4000000>;
+    };
+    soc_ctl0: soc-control@2000000 {
+      compatible = "eth,occamy-soc-control";
+      reg-names = "soc-control";
+      reg = <0x0 0x02000000 0x0 0x1000>;
+    };
+    quadrant_ctrl0: quadrant-control@b000000 {
+      compatible = "eth,occamy-quadrant-control";
+      reg-names = "quadrant-control";
+      reg = <0x0 0x0b000000 0x0 0x10000>;
+    };
+    // Instantiate a snitch cluster
+    snitch-cluster@10000000 {
+      compatible = "eth,snitch-cluster";
+      // TCDM and Peripheral spaces
+      reg-names = "tcdm", "peripheral";
+      reg = <0x0 0x10000000 0x0 0x20000>, <0x0 0x10020000 0x0 0x20000>;
+      // points to a memory region reserved for use by the cluster
+      memory-region = <&snitch_mem>;
+      // cluster specific properties
+      eth,compute-cores = <8>;
+      eth,dm-cores = <1>;
+      eth,quadrant-idx = <0>;
+      eth,cluster-idx = <0>; // Used to calculate offsets in clint, soc-ctrl etc..
+      // A handle to the soc-control register where isolates etc are located
+      eth,soc-ctl = <&soc_ctl0>;
+      // Handle to the associated quadrant controller
+      eth,quadrant-ctrl = <&quadrant_ctrl0>;
+      // handle to the clint where IPI interrupts are attached
+      eth,clint = <&clint0>;
+    };
+  };
+};
diff --git a/board/pulp-platform/occamy/Kconfig b/board/pulp-platform/occamy/Kconfig
new file mode 100644
index 0000000000..12e0bebe42
--- /dev/null
+++ b/board/pulp-platform/occamy/Kconfig
@@ -0,0 +1,31 @@
+if TARGET_PULP_PLATFORM_OCCAMY
+
+config SYS_BOARD
+	default "occamy"
+
+config SYS_VENDOR
+	default "pulp-platform"
+
+config SYS_CPU
+	default "generic"
+
+config SYS_CONFIG_NAME
+	default "pulp-platform_occamy"
+
+config SYS_TEXT_BASE
+	default 0x80200000 if SPL
+	default 0x80000000 if !RISCV_SMODE
+	default 0x80200000 if RISCV_SMODE
+
+config SPL_TEXT_BASE
+	default 0xb2000000
+
+config SPL_OPENSBI_LOAD_ADDR
+	default 0x80000000
+
+config BOARD_SPECIFIC_OPTIONS # dummy
+	def_bool y
+	select GENERIC_RISCV
+	select SUPPORT_SPL
+
+endif
diff --git a/board/pulp-platform/occamy/Makefile b/board/pulp-platform/occamy/Makefile
new file mode 100644
index 0000000000..fc8f63bbeb
--- /dev/null
+++ b/board/pulp-platform/occamy/Makefile
@@ -0,0 +1,5 @@
+obj-y	+= occamy.o
+
+ifdef CONFIG_SPL_BUILD
+obj-y += occamy_spl.o
+endif
diff --git a/board/pulp-platform/occamy/occamy.c b/board/pulp-platform/occamy/occamy.c
new file mode 100644
index 0000000000..d703634b1a
--- /dev/null
+++ b/board/pulp-platform/occamy/occamy.c
@@ -0,0 +1,5 @@
+#include <init.h>
+
+int board_init(void) { return 0; }
+
+int ft_board_setup(void *fdt, struct bd_info *bd) { return 0; }
diff --git a/board/pulp-platform/occamy/occamy_spl.c b/board/pulp-platform/occamy/occamy_spl.c
new file mode 100644
index 0000000000..cf81b2acbc
--- /dev/null
+++ b/board/pulp-platform/occamy/occamy_spl.c
@@ -0,0 +1,72 @@
+#include <init.h>
+#include <spl.h>
+#include <misc.h>
+#include <log.h>
+#include <asm/spl.h>
+
+#define OCCAMY_LOG_BASE (0x80000000)
+
+int spl_board_init_f(void)
+{
+	_occamy_puts("spl_board_init_f\n");
+
+	return 0;
+}
+
+u32 spl_boot_device(void)
+{
+	return BOOT_DEVICE_RAM;
+}
+
+#ifdef CONFIG_SPL_LOAD_FIT
+int board_fit_config_name_match(const char *name)
+{
+	/* boot using first FIT config */
+	return 0;
+}
+#endif
+
+void *memset(void *_ptr, int p, __kernel_size_t size)
+{
+	u8 * ptr = (u8 *)_ptr;
+	for (u32 i = 0; i < size; i++) {
+		ptr[i] = p;
+	}
+	return _ptr;
+}
+
+unsigned long get_log_size() {
+	unsigned int *_log_size = (unsigned int *)(OCCAMY_LOG_BASE);
+	return *_log_size;
+}
+
+void set_log_size(unsigned int size) {
+	unsigned int *_log_size = (unsigned int *)(OCCAMY_LOG_BASE);
+	*_log_size = *_log_size + size;
+}
+
+char *get_log_ptr () {
+	char *_log_ptr = (char *)(OCCAMY_LOG_BASE + 8 + get_log_size());
+	return _log_ptr;
+}
+
+int _occamy_putc (const char c) {
+	//Magic
+	char *log = get_log_ptr();
+	*log = c;
+	set_log_size(1);
+	return 0;
+}
+
+int _occamy_puts (const char *msg) {
+	unsigned int char_cnt = 0;
+	char *log = get_log_ptr();
+	while (*msg) {
+		*log = *msg;
+		log++;
+		msg++;
+		char_cnt++;
+	}
+	set_log_size(char_cnt);
+	return 0;
+}
\ No newline at end of file
diff --git a/common/init/board_init.c b/common/init/board_init.c
index 3f183ee113..ea31d7d2cb 100644
--- a/common/init/board_init.c
+++ b/common/init/board_init.c
@@ -138,6 +138,8 @@ void board_init_f_init_reserve(ulong base)
 	 * Use gd_ptr, as gd may not be properly set yet.
 	 */
 
+	//_occamy_puts("Hello Occamy!\n");
+
 	gd_ptr = (struct global_data *)base;
 	/* zero the area */
 	memset(gd_ptr, '\0', sizeof(*gd));
diff --git a/common/log.c b/common/log.c
index ea407c6db9..25e73b1410 100644
--- a/common/log.c
+++ b/common/log.c
@@ -14,6 +14,24 @@
 
 DECLARE_GLOBAL_DATA_PTR;
 
+#define OCCAMY_LOG_BASE (0xc0000000)
+
+static unsigned int *_log_size = (unsigned int *)(OCCAMY_LOG_BASE);
+//static void *_log_base = (void*)(OCCAMY_LOG_BASE + sizeof(unsigned int));
+static char *_log_ptr = (char *)(OCCAMY_LOG_BASE + 8);
+
+int _occamy_puts (const char *msg) {
+	unsigned int char_cnt = 0;
+	while (*msg) {
+		*_log_ptr = *msg;
+		_log_ptr++;
+		msg++;
+		char_cnt++;
+	}
+	*_log_size = *_log_size + char_cnt;
+	return 0;
+}
+
 static const char *const log_cat_name[] = {
 	"none",
 	"arch",
@@ -269,6 +287,7 @@ int _log(enum log_category_t cat, enum log_level_t level, const char *file,
 			va_start(args, fmt);
 			vsnprintf(buf, sizeof(buf), fmt, args);
 			puts(buf);
+			//_occamy_puts(buf);
 			va_end(args);
 		}
 
diff --git a/configs/pulp-platform_occamy_defconfig b/configs/pulp-platform_occamy_defconfig
new file mode 100644
index 0000000000..65b0798969
--- /dev/null
+++ b/configs/pulp-platform_occamy_defconfig
@@ -0,0 +1,75 @@
+CONFIG_RISCV=y
+CONFIG_SYS_MALLOC_F_LEN=0x3000
+#CONFIG_DM_GPIO is not set
+#CONFIG_SPL_DM_SPI is not set
+CONFIG_SPL=y
+#CONFIG_SPL_SPI_FLASH_SUPPORT is not set
+#CONFIG_SPL_SPI_SUPPORT is not set
+CONFIG_DEFAULT_DEVICE_TREE="occamy"
+CONFIG_TARGET_PULP_PLATFORM_OCCAMY=y
+CONFIG_ARCH_RV64I=y
+CONFIG_RISCV_SMODE=y
+CONFIG_FIT=y
+CONFIG_SPL_LOAD_FIT_ADDRESS=0xa0000000
+CONFIG_OF_BOARD_SETUP=y
+CONFIG_BOOTDELAY=1
+#CONFIG_USE_BOOTCOMMAND is not set
+#CONFIG_BOOTCOMMAND="dhcp; tftp 0x83000000 129.132.24.199:vcu128-01/Image.itb; bootm 0x83000000"
+CONFIG_USE_BOOTARGS=y
+CONFIG_BOOTARGS="earlyprintk"
+CONFIG_LOG=y
+CONFIG_LOG_MAX_LEVEL=9
+CONFIG_LOGF_FUNC=y
+CONFIG_LOG_ERROR_RETURN=y
+CONFIG_DISPLAY_CPUINFO=y
+#CONFIG_SPL_MTD_SUPPORT is not set
+#CONFIG_SPL_DM_SPI_FLASH is not set
+CONFIG_SPL_RAM_SUPPORT=y
+CONFIG_SPL_RAM_DEVICE=y
+#CONFIG_SPL_SPI_FLASH_MTD is not set
+#CONFIG_SPL_SPI_LOAD is not set
+#CONFIG_CMD_MEMTEST is not set
+#CONFIG_CMD_GPIO is not set
+#CONFIG_CMD_I2C is not set
+CONFIG_CMD_SF_TEST=y
+#CONFIG_CMD_AXI is not set
+#CONFIG_CMD_DHCP is not set
+#CONFIG_CMD_MII is not set
+#CONFIG_CMD_PING is not set
+#CONFIG_CMD_DNS is not set
+#CONFIG_CMD_MTDPARTS is not set
+CONFIG_CMD_FDT=y
+CONFIG_MTDIDS_DEFAULT="ramdisk0=ramdisk0.0"
+CONFIG_MTDPARTS_DEFAULT="mtdparts=ramdisk0.0:1m(u-boot),16m(uimage),143m(filesystem)"
+CONFIG_OF_PRIOR_STAGE=y
+#CONFIG_PROT_UDP is not set
+#CONFIG_NET_RANDOM_ETHADDR is not set
+#CONFIG_AXI is not set
+#CONFIG_DM_PCA953X is not set
+#CONFIG_DM_I2C is not set
+#CONFIG_SYS_I2C_XILINX_XIIC is not set
+#CONFIG_I2C_MUX is not set
+#CONFIG_I2C_MUX_PCA954x is not set
+#CONFIG_DM_MTD is not set
+#CONFIG_SPI_FLASH_ATMEL is not set
+#CONFIG_SPI_FLASH_EON is not set
+#CONFIG_SPI_FLASH_GIGADEVICE is not set
+#CONFIG_SPI_FLASH_ISSI is not set
+#CONFIG_SPI_FLASH_MACRONIX is not set
+#CONFIG_SPI_FLASH_SPANSION is not set
+#CONFIG_SPI_FLASH_STMICRO is not set
+#CONFIG_SPI_FLASH_SST is not set
+#CONFIG_SPI_FLASH_WINBOND is not set
+#CONFIG_SPI_FLASH_XMC is not set
+# CONFIG_SPI_FLASH_USE_4K_SECTORS is not set
+#CONFIG_SPI_FLASH_MTD is not set
+#CONFIG_PHY_TI_DP83867 is not set
+#CONFIG_PHY_XILINX is not set
+#CONFIG_DM_MDIO is not set
+#CONFIG_DM_ETH_PHY is not set
+#CONFIG_XILINX_AXIEMAC is not set
+#CONFIG_PHY is not set
+CONFIG_SYS_NS16550=y
+#CONFIG_SPI is not set
+#CONFIG_XILINX_SPI is not set
+CONFIG_CLINT_TIMER=y
\ No newline at end of file
diff --git a/drivers/core/root.c b/drivers/core/root.c
index fe0562cd6f..27146ee05f 100644
--- a/drivers/core/root.c
+++ b/drivers/core/root.c
@@ -265,6 +265,8 @@ static int dm_scan_fdt_node(struct udevice *parent, ofnode parent_node,
 	int ret = 0, err = 0;
 	ofnode node;
 
+	//_occamy_puts("dm_scan_fdt_node : \n");
+
 	if (!ofnode_valid(parent_node))
 		return 0;
 
diff --git a/include/configs/pulp-platform_occamy.h b/include/configs/pulp-platform_occamy.h
new file mode 100644
index 0000000000..b64000ffef
--- /dev/null
+++ b/include/configs/pulp-platform_occamy.h
@@ -0,0 +1,39 @@
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+#include <linux/sizes.h>
+
+#define CONFIG_TFTP_TSIZE
+
+// fdt_high=~0UL to use FDT in-place
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	"fdt_high=0xe0000000\0" \
+	"tftptimeout=1000\0" \
+	"tftptimeoutcountmax=1000\0"
+
+#ifdef CONFIG_SPL
+#define CONFIG_SPL_MAX_SIZE		0x00020000
+
+#define CONFIG_SPL_BSS_START_ADDR	0xb2018000
+#define CONFIG_SPL_BSS_MAX_SIZE		0x00008000
+
+// We need more space than the SPM can provide, so put the heap into HBM.
+// malloc should only be available _after_ the HBM is initialised.
+#define CONFIG_SYS_SPL_MALLOC_START	0xb4000000
+#define CONFIG_SYS_SPL_MALLOC_SIZE	0x00100000
+
+#define CONFIG_SPL_STACK	0xb2018000
+#endif
+
+// OpenSBI is at 0x80000000
+#define CONFIG_SYS_SDRAM_BASE		0xb0200000
+#define CONFIG_SYS_INIT_SP_ADDR		(CONFIG_SYS_SDRAM_BASE + SZ_2M)
+
+#define CONFIG_SYS_LOAD_ADDR		(CONFIG_SYS_SDRAM_BASE + SZ_2M)
+
+#define CONFIG_SYS_MALLOC_LEN       SZ_8M
+#define CONFIG_SYS_BOOTM_LEN        SZ_128M
+
+#define CONFIG_SYS_MAX_FLASH_BANKS 1
+#define CONFIG_SYS_FLASH_BASE 0x0
+#endif
diff --git a/include/log.h b/include/log.h
index add3a1e4a0..6dbf59c38b 100644
--- a/include/log.h
+++ b/include/log.h
@@ -15,6 +15,9 @@
 #include <linux/bitops.h>
 #include <linux/list.h>
 
+int _occamy_putc (const char c);
+int _occamy_puts (const char *msg);
+
 struct cmd_tbl;
 
 /**
@@ -210,6 +213,10 @@ static inline int _log_nop(enum log_category_t cat, enum log_level_t level,
 		      __func__, pr_fmt(_fmt), ##_args); \
 })
 
+#ifndef DEBUG
+#define DEBUG
+#endif
+
 #ifdef DEBUG
 #define _DEBUG	1
 #else
diff --git a/lib/tiny-printf.c b/lib/tiny-printf.c
index 8fc7e48d99..60d56fbcbc 100644
--- a/lib/tiny-printf.c
+++ b/lib/tiny-printf.c
@@ -13,6 +13,9 @@
 #include <serial.h>
 #include <linux/ctype.h>
 
+int _occamy_putc (const char c);
+int _occamy_puts (const char *msg);
+
 struct printf_info {
 	char *bf;	/* Digit buffer */
 	char zs;	/* non-zero if a digit has been written */
@@ -207,6 +210,7 @@ static int _vprintf(struct printf_info *info, const char *fmt, va_list va)
 	while ((ch = *(fmt++))) {
 		if (ch != '%') {
 			info->putc(info, ch);
+			_occamy_putc(ch);
 		} else {
 			bool lz = false;
 			int width = 0;
@@ -314,11 +318,15 @@ static int _vprintf(struct printf_info *info, const char *fmt, va_list va)
 			info->bf = p;
 			while (*info->bf++ && width > 0)
 				width--;
-			while (width-- > 0)
+			while (width-- > 0) {
 				info->putc(info, lz ? '0' : ' ');
+				_occamy_putc(lz ? '0' : ' ');
+			}
 			if (p) {
-				while ((ch = *p++))
+				while ((ch = *p++)) {
+					_occamy_putc(ch);
 					info->putc(info, ch);
+				}
 			}
 		}
 	}
-- 
2.34.1

